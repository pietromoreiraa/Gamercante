@model IEnumerable<Gamer.Models.Game>

@{
    ViewBag.Title = "Index";
}

<h2>Jogos</h2>

<div class="navbar-collapse collapse">

    <ul class="nav navbar-nav">
        

    </ul>
</div>

@using (Html.BeginForm("Search", "Games", null, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @*@Html.TextBox("SearchString")*@
                Pesquisar: <input type="text" name="SearchString" id="SearchString"
                                  class="form-control" />
                <input type="submit" value="Pesquisar" class="btn btn-default" />
                
            </div>
        </div>
    </div>

    <br />

}
@using (Html.BeginForm("Filter", "Games", null, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        Pesquisar por Gênero:
        <div class="form-group">
            <div class="col-md-10">
                
                @Html.DropDownList("FilterString", new List<SelectListItem>
                {
                new SelectListItem {Text = "Mundo Aberto", Value = "Mundo Aberto"},
                new SelectListItem {Text = "Ação", Value = "Acao"},
                new SelectListItem {Text = "Survival Horror", Value = "Survival Horror"},
                new SelectListItem {Text = "RPG", Value = "RPG"},
                new SelectListItem {Text = "Indie", Value = "Indie"},
                new SelectListItem {Text = "AAA", Value = "AAA"}
                }, "", new { @class = "form-control" })
                <input type="submit" value="Filtrar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<br />

<p>
    @Html.ActionLink("Novo jogo", "Create")
</p>
<table class="table">
    <tr>
        <th>
           Nome
        </th>
        <th>
           Jogo
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Plataforma)
        </th>
        <th>
            Preço
        </th>
        <th>
            Tipo de negocio
        </th>
        <th>
            Descrição
        </th>
        <th>
            Gênero
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plataforma)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoNegocio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categoria)
            </td>
            <td>

                @{
                    string img = item.Img;
                    if (img != string.Empty)
                    {
                        if (img != null)
                        {
                            string file = img;
                            string path = System.Configuration.ConfigurationManager.AppSettings["PathWeb"] + "/Files/Games/" + file;
                            <img src='@Url.Content(path)' style="height:150px;" title="Foto" /><br />
                            <a href="@path" target="_blank">Visualizar</a>
                        }
                    }
                }


            </td>
            <td>
                @Html.ActionLink("Editar", "Edit", new { id = item.GameID }) |
                @Html.ActionLink("Detalhes", "Details", new { id = item.GameID }) |
                @Html.ActionLink("Deletar", "Delete", new { id = item.GameID })
            </td>
        </tr>
    }

</table>
