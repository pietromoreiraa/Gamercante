@model Gamer.ViewModels.ShoppingCartViewModel
@{
    ViewBag.Title = "Shopping Cart";
    Gamer.Models.Context db = new Gamer.Models.Context();
}
<script src="/Scripts/jquery-1.4.4.min.js"
        type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        // Document.ready -> link up remove event handler
        $(".RemoveLink").click(function () {
            // Get the id from the link
            var recordToDelete = $(this).attr("data-id");
            if (recordToDelete != '') {
                // Perform the ajax post
                $.post("/ShoppingCart/RemoveFromCart", { "id": recordToDelete },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                        }
                        $('#cart-total').text(data.CartTotal);
                        $('#update-message').text(data.Message);
                        $('#cart-status').text('Cart (' + data.CartCount + ')');
                    });
            }
        });
    });


    src = "https://www.paypal.com/sdk/js?client-id=ARHhbVzNFw2GawSKU8QimH8SgkB-7qSf41rKpKZPfQadprMo_wHFcRlzkJk1wNQDLQ8d0gAh0aJMxaaM" > // Required. Replace SB_CLIENT_ID with your sandbox client ID.

</script>
<h3>
    <em>Review</em> your cart:
</h3>
<div id="paypal-button-container">

</div>



<div id="update-message">
</div>
<table>
    <tr>
        <th>
            Game Name
        </th>
        <th>
            Preco (each)
        </th>
        <th>
            Quantity
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.CartItems)
    {

        Gamer.Models.Game game = db.Games.Find(item.GameId);


        <tr id="row-@item.RecordId">
            <td>
                @Html.ActionLink(game.Nome, "Details", "Games", new { id = item.GameId }, null)
            </td>
            <td>
                @game.Preco
            </td>
            <td id="item-count-@item.RecordId">
                @item.Count
            </td>
            <td>
                <a href="#" class="RemoveLink"
                   data-id="@item.RecordId">
                    Remove
                    from cart
                </a>
            </td>
        </tr>
    }
    <tr>
        <td>
            Total
        </td>
        <td></td>
        <td></td>
        <td id="cart-total">
            @Model.CartTotal
        </td>
    </tr>

</table>
@{
    decimal Valor = Model.CartTotal;
}
<script>
    paypal.Buttons({
        createOrder: function (data, actions) {
            // This function sets up the details of the transaction, including the amount and line item details.
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        currency_code: "BRL",
                        value: 'Valor'
                    }
                }]
            });
        },
        onApprove: function (data, actions) {
            // This function captures the funds from the transaction.
            return actions.order.capture().then(function (details) {
                // This function shows a transaction success message to your buyer.
                alert('Transaction completed by ' + details.payer.name.given_name);
                return fetch('/paypal-transaction-complete', {
                    method: 'post',
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderID: data.orderID
                    })
                });
            });
        }

    }).render('#paypal-button-container');
</script>
@Html.ActionLink("Checkout With PayPal", "PaymentWithPaypal", "ShoppingCart")